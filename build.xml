<?xml version="1.0" encoding="UTF-8"?>
<project default="build" basedir=".">
	
    <property name="basedir" value="${project.basedir}" />
    <property name="build" value="${basedir}/../build" />
    <property file="build.properties" />
    <property name="dist" value="${basedir}/../dist" />
    <property name="dist.name" value="${project.name}-${project.version}" />
    
	<!-- PHP Fileset -->
    <patternset id="inc.php.files">
        <include name="**/*.php" />
        <exclude name="**/tests/**" />         
        <exclude name="**/library/**" />
        <exclude name="**/public/scripts/**" />
    </patternset>
    
	<!-- Fileset excluded from dist -->
    <patternset id="dist.exc">
        <!--build files-->
        <exclude name="build.*" />
        <!--tests-->
        <exclude name="**/tests/**" />
        <!--file templates -->
        <exclude name="**/*.tpl" />
        <!-- cache and log files -->
        <exclude name="application/cache/*/**" />
        <exclude name="application/log/*.*" />
    </patternset>
	
	<!-- Fileset excluded from dist (DVD) -->
	<patternset id="dist.exc.dvd">
		<!-- Exclude webservices -->
		<exclude name="**/Webservice*" />
	</patternset>
	
    <tstamp>
        <format property="now" pattern="%c" locale="nl_NL"/>
    </tstamp>

    <!-- Checkout latest version from SVN -->
    <target name="checkout">
        <svnupdate svnpath="svn" nocache="true" todir="${basedir}" />
        <svnlastrevision svnpath="svn" workingcopy="${basedir}"
           propertyname="revision"/>
    </target>

    <!-- Clean and set up build/dist directories -->
    <target name="clean">
        <delete dir="${build}" includeemptydirs="true" />
        <delete dir="${dist}" includeemptydirs="true" />
        <mkdir dir="${build}/logs" />
        <mkdir dir="${build}/api" />
        <mkdir dir="${build}/coverage" />
        <mkdir dir="${dist}" />
    </target>
	
	<!-- Clean and set up build/dist directories (DVD) -->
    <target name="clean-dvd">
        <delete dir="${build}-dvd" includeemptydirs="true" />
        <delete dir="${dist}-dvd" includeemptydirs="true" />
    	<mkdir dir="${build}-dvd" />
        <mkdir dir="${dist}-dvd" />
    </target>
   
    <!-- Generate documentation -->
    <target name="phpdoc">
        <exec dir="${basedir}"
           command="phpdoc -ct type -ue on -t ${build}/api
                    -tb /usr/share/php/data/phpUnderControl/data/phpdoc -o HTML:Phpuc:phpuc
                    -d ${basedir}/application,${basedir}/tests -f ${basedir}/public/index.php" />
    </target>
   
    <!-- PHPUnit -->
    <target name="phpunit">
        <exec dir="${basedir}"
           checkreturn="true"
           command="phpunit
           --configuration tests/phpunit.xml
           --log-junit ${build}/logs/phpunit.xml
           --coverage-clover ${build}/logs/phpunit.coverage.xml
           --coverage-html ${build}/coverage                      
           tests" />
    </target>
       
    <!-- Create deliverable of the web version -->
    <target name="dist">        
        <mkdir dir="${dist}/source" />
        <mkdir dir="${dist}/source/${dist.name}" />
        <copy todir="${dist}/source/${dist.name}">
            <fileset dir=".">
                <patternset refid="dist.exc" />
            </fileset>
        </copy>
       
        <copy file="${basedir}/application/configs/config.ini.tpl"
             tofile="${dist}/source/${dist.name}/application/configs/config.ini"
             overwrite="true" />
       
        <copy file="${basedir}/public/.htaccess.tpl"
             tofile="${dist}/source/${dist.name}/public/.htaccess"
             overwrite="true" />
       
        <reflexive>
            <fileset dir="${dist}/source/${dist.name}">
                <include name="application/configs/config.ini" />
                <include name="application/configs/application.xml" />
                <include name="README.txt" />
                <include name="public/.htaccess" />
            </fileset>            
        	<filterchain>
                  <replacetokens>
                      <token key="APP.EDITION" value="${project.edition}" />
                      <token key="APP.VERSION" value="${project.version}" />
                      <token key="APP.REVISION" value="${revision}" />
                  	  <token key="TIMESTAMP" value="${now}" />
                  	  <token key="ENVIRONMENT" value="production" />
                  </replacetokens>
            </filterchain>
        </reflexive>
       
        <!-- zip -->
        <exec dir="${dist}/source"
             command="zip -r ${dist}/${dist.name}.r${revision}.zip ${dist.name}"
             escape="false"/>
        <!-- tar.gz -->
        <exec dir="${dist}/source"
             command="tar czvf ${dist}/${dist.name}.r${revision}.tar.gz ${dist.name}"
             escape="false"/>
        <delete dir="${dist}/source" includeemptydirs="true" />
    </target>
	
	<!-- Create deliverable for the DVD -->
    <target name="dist-dvd">        
        <mkdir dir="${dist}-dvd/source" />
        <mkdir dir="${dist}-dvd/source/${dist.name}" />
        <copy todir="${dist}-dvd/source/${dist.name}">
            <fileset dir=".">
    	        <patternset refid="dist.exc" />
                <patternset refid="dist.exc.dvd" />
            </fileset>
        </copy>
       
        <copy file="${basedir}/application/configs/config.ini.tpl"
             tofile="${dist}-dvd/source/${dist.name}/application/configs/config.ini"
             overwrite="true" />
       
        <copy file="${basedir}/public/.htaccess.tpl"
             tofile="${dist}-dvd/source/${dist.name}/public/.htaccess"
             overwrite="true" />
       
        <reflexive>
            <fileset dir="${dist}-dvd/source/${dist.name}">
                <include name="application/configs/config.ini" />
                <include name="application/configs/application.xml" />
                <include name="README.txt" />
                <include name="public/.htaccess" />
            </fileset>
        	<filterchain>
                  <replacetokens>
                      <token key="APP.EDITION" value="${project.edition}" />
                      <token key="APP.VERSION" value="${project.version}" />
                      <token key="APP.REVISION" value="${revision}" />
                      <token key="TIMESTAMP" value="${now}" />
                      <token key="ENVIRONMENT" value="standalone" />
                  </replacetokens>
            </filterchain>
        </reflexive>
       
        <!-- zip -->
    	<echo>zip -r ${dist}dvd/${dist.name}-DVD.r${revision}.zip ${dist.name}</echo>
        <exec dir="${dist}dvd/source"
             command="zip -r ${dist}dvd/${dist.name}-DVD.r${revision}.zip ${dist.name}"
             escape="false"/>
        <!-- tar.gz -->    	
    	<echo>tar czvf ${dist}-dvd/${dist.name}-DVD.r${revision}.tar.gz ${dist.name}</echo>
        <exec dir="${dist}-dvd/source"
             command="tar czvf ${dist}-dvd/${dist.name}-DVD.r${revision}.tar.gz ${dist.name}"
             escape="false"/>
        <delete dir="${dist}-dvd/source" includeemptydirs="true" />
    </target>
   
    <target name="build" depends="clean,checkout,phpunit,phpdoc,dist" />
	<target name="build-dvd" depends="clean-dvd,checkout,dist-dvd" />

</project>